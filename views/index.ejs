<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Document</title>
    <link
      rel="stylesheet"
      href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.2/css/all.min.css"
      integrity="sha512-SnH5WK+bZxgPHs44uWIX+LLJAJ9/2PkPKZ5QiAj6Ta86w+fsb2TkcmfRyVX3pBnMFcV7oQPJkl9QevSCWr3W6A=="
      crossorigin="anonymous"
      referrerpolicy="no-referrer"
    />
    <style>
      * {
        padding: 0;
        margin: 0;
        font-family: "Trebuchet MS", "Lucida Sans Unicode", "Lucida Grande",
          "Lucida Sans", Arial, sans-serif;
      }
      html,
      body {
        height: 100%;
        width: 100%;
      }
      .maincont {
        height: 100%;
        width: 100vw;
        background-color: rgb(39, 37, 37);
        display: flex;
        justify-content: center;
        align-items: center;
      }
      #chat-container {
        position: relative;
        width: 25vw;
        height: 85vh;
        border: 1px solid rgb(82, 80, 80);
        border-radius: 25px;
        overflow: hidden;
      }
      #header {
        background-color: rgb(16, 95, 24);
        height: 8.5%;
        width: 100%;
        display: flex;
        padding: 5px;
        align-items: center;
        color: azure;
        font-family: "Trebuchet MS", "Lucida Sans Unicode", "Lucida Grande",
          "Lucida Sans", Arial, sans-serif;
      }
      #header > svg {
        scale: 0.5;
        width: 20%;
      }
      #chatsection {
        background-image: url(https://cdn.wallpapersafari.com/12/90/TyLtep.jpg);
        height: 80%;
        background-size: cover;
        background-position: center;
        color: white;
        padding: 6px 0;
        overflow-y: scroll;
      }
      #chatsection::-webkit-scrollbar {
        display: none;
      }
      #messages {
        height: 100%;
        width: 100%;
        display: flex;
        flex-direction: column;
        padding: 6px;
      }
      #footersection {
        position: absolute;
        bottom: 0;
        padding: 5px;
        width: 100%;
        height: 6.5%;
        display: flex;
        padding-bottom: 0.75vw;
        background-image: url(https://cdn.wallpapersafari.com/12/90/TyLtep.jpg);
        background-size: cover;
        background-position: center;
      }
      #messageInput {
        width: 82%;
        height: 100%;
        border-radius: 18px;
        background-color: #4d4d4d;
        border: none;
        padding: 4px;
        box-sizing: border-box;
        color: aliceblue;
        font-size: 1.1rem;
      }
      #sendMessage {
        background-color: transparent;
        font-size: 1.5rem;
        border: none;
        margin-left: 13px;
        padding: 4px;
      }
      #sendMessage > i {
        color: beige;
      }
      .userside,
      .serverside {
        display: block;
        border-radius: 9px;
        margin-bottom: 1vw;
        width: max-content;
        padding: 5px;
      }
      .userside {
        background-color: grey;
        align-self: flex-end;
        max-width: 80%;
        margin-left: auto;
        margin-right: 0.75vw;
      }
      .serverside {
        background-color: rgb(71, 68, 68);
        align-self: flex-start;
        max-width: 80%;
        margin-right: auto;
      }

      @media (max-width: 768px) {
        #chat-container {
          width: 80vw;
          height: 80vh;
        }
        #header {
          height: 10%;
          font-size: 1.5rem;
        }
        #header > svg {
          width: 15%;
        }
        #footersection {
          height: 10%;
        }
        #messageInput {
          font-size: 1rem;
        }
        #sendMessage {
          font-size: 1.2rem;
        }
      }

      @media (max-width: 480px) {
        #chat-container {
          width: 100vw;
          height: 90vh;
        }
        #header {
          height: 12%;
          font-size: 1.2rem;
        }
        #header > svg {
          width: 20%;
        }
        #footersection {
          height: 12%;
        }
        #messageInput {
          font-size: 0.9rem;
        }
        #sendMessage {
          font-size: 1rem;
        }
      }
    </style>
  </head>

  <body>
    <div class="maincont">
      <div id="chat-container">
        <div id="header">
          <svg
            fill="none"
            xmlns="http://www.w3.org/2000/svg"
            viewBox="0 0 16 16"
          >
            <path
              d="M16 8.016A8.522 8.522 0 008.016 16h-.032A8.521 8.521 0 000 8.016v-.032A8.521 8.521 0 007.984 0h.032A8.522 8.522 0 0016 7.984v.032z"
              fill="url(#prefix__paint0_radial_980_20147)"
            />
            <defs>
              <radialGradient
                id="prefix__paint0_radial_980_20147"
                cx="0"
                cy="0"
                r="1"
                gradientUnits="userSpaceOnUse"
                gradientTransform="matrix(16.1326 5.4553 -43.70045 129.2322 1.588 6.503)"
              >
                <stop offset=".067" stop-color="#9168C0" />
                <stop offset=".343" stop-color="#5684D1" />
                <stop offset=".672" stop-color="#1BA1E3" />
              </radialGradient>
            </defs>
          </svg>
          <span style="font-weight: 700; font-size: 2.2rem">Gemini</span>
        </div>

        <div id="chatsection">
          <div id="messages"></div>
        </div>
        <div id="footersection">
          <input id="messageInput" type="text" placeholder="Enter Your Prompt" />
          <button id="sendMessage">
            <i class="fa-regular fa-paper-plane"></i>
          </button>
        </div>
      </div>
    </div>

    <script>
      async function handlesend() {
        const message = document.getElementById("messageInput").value.trim();

        try {
          const response = await fetch("/sendMessage", {
            method: "POST",
            headers: {
              "Content-type": "Application/json",
            },
            body: JSON.stringify({ message }),
          });

          if (!response) {
            throw new Error("failed to get to the server");
          }
          const responseData = await response.json();
          botMessage = `<span class="userside"> ${message}</span><span class="serverside"> ${responseData.response}</span>`;
          document.getElementById("messages").innerHTML += botMessage;
          document.getElementById("messageInput").value = "";
        } catch (error) {
          console.log("error sending message", error);
        }
      }

      document.getElementById("sendMessage").addEventListener("click", handlesend);

      document.getElementById("messageInput").addEventListener("keydown", (event) => {
        if (event.key === "Enter") {
          handlesend();
        }
      });
    </script>
  </body>
</html>
